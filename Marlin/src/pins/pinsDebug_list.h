/**
 * Marlin 3D Printer Firmware
 * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
 *
 * Based on Sprinter and grbl.
 * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 */

// Please update this list when adding new pins to Marlin.
// The order doesn't matter.
// Following this pattern is a must.
// If the new pin name is over 28 characters long then pinsDebug.h will need to be modified.

#if TARGET_LPC1768
  #define ANALOG_OK(PN) (WITHIN(PN, P0_02, P0_03) || WITHIN(PN, P0_23, P0_26) || WITHIN(PN, P1_30, P1_31))
#else
  #define ANALOG_OK(PN) WITHIN(PN, 0, NUM_ANALOG_INPUTS - 1)
#endif

#line 35 // set __LINE__ to a known value for both passes

//
// Analog Pin Assignments
//

#define _EXISTS(PN,V...) (defined(PN##V) && PN##V >= 0)

#if PIN_EXISTS(FILWIDTH)
  #if ANALOG_OK(FILWIDTH_PIN)
    REPORT_NAME_ANALOG(__LINE__, FILWIDTH_PIN)
  #endif
#endif
#if PIN_EXISTS(MAIN_VOLTAGE_MEASURE)
  #if ANALOG_OK(MAIN_VOLTAGE_MEASURE_PIN)
    REPORT_NAME_ANALOG(__LINE__, MAIN_VOLTAGE_MEASURE_PIN)
  #endif
#endif
#if PIN_EXISTS(POWER_MONITOR_CURRENT)
  #if ANALOG_OK(POWER_MONITOR_CURRENT_PIN)
    REPORT_NAME_ANALOG(__LINE__, POWER_MONITOR_CURRENT_PIN)
  #endif
#endif
#if PIN_EXISTS(POWER_MONITOR_VOLTAGE)
  #if ANALOG_OK(POWER_MONITOR_VOLTAGE_PIN)
    REPORT_NAME_ANALOG(__LINE__, POWER_MONITOR_VOLTAGE_PIN)
  #endif
#endif
#if !defined(ARDUINO_ARCH_SAM) && !defined(ARDUINO_ARCH_SAMD)  // TC1 & TC2 are macros in the SAM/SAMD tool chain
  #if _EXISTS(TC1)
    #if ANALOG_OK(TC1)
    REPORT_NAME_ANALOG(__LINE__, TC1)
  #endif
  #endif
  #if _EXISTS(TC2)
    #if ANALOG_OK(TC1)
      REPORT_NAME_ANALOG(__LINE__, TC1)
    #endif
  #endif
#endif
#if PIN_EXISTS(TEMP_0)
  #if ANALOG_OK(TEMP_0_PIN)
      REPORT_NAME_ANALOG(__LINE__, TEMP_0_PIN)
    #endif
#endif
#if PIN_EXISTS(TEMP_1)
  #if ANALOG_OK(TEMP_1_PIN)
    REPORT_NAME_ANALOG(__LINE__, TEMP_1_PIN)
  #endif
#endif
#if PIN_EXISTS(TEMP_2)
  #if ANALOG_OK(TEMP_2_PIN)
    REPORT_NAME_ANALOG(__LINE__, TEMP_2_PIN)
  #endif
#endif
#if PIN_EXISTS(TEMP_3)
  #if ANALOG_OK(TEMP_3_PIN)
    REPORT_NAME_ANALOG(__LINE__, TEMP_3_PIN)
  #endif
#endif
#if PIN_EXISTS(TEMP_4)
  #if ANALOG_OK(TEMP_4_PIN)
    REPORT_NAME_ANALOG(__LINE__, TEMP_4_PIN)
  #endif
#endif
#if PIN_EXISTS(TEMP_5)
  #if ANALOG_OK(TEMP_5_PIN)
    REPORT_NAME_ANALOG(__LINE__, TEMP_5_PIN)
  #endif
#endif
#if PIN_EXISTS(TEMP_6)
  #if ANALOG_OK(TEMP_6_PIN)
    REPORT_NAME_ANALOG(__LINE__, TEMP_6_PIN)
  #endif
#endif
#if PIN_EXISTS(TEMP_7)
  #if ANALOG_OK(TEMP_7_PIN)
    REPORT_NAME_ANALOG(__LINE__, TEMP_7_PIN)
  #endif
#endif

//
// Digital Pin Assignments
//

#if _EXISTS(__FD)
  REPORT_NAME_DIGITAL(__LINE__, __FD)
#endif
#if _EXISTS(__FS)
  REPORT_NAME_DIGITAL(__LINE__, __FS)
#endif
#if _EXISTS(__GD)
  REPORT_NAME_DIGITAL(__LINE__, __GD)
#endif
#if _EXISTS(__GS)
  REPORT_NAME_DIGITAL(__LINE__, __GS)
#endif
#if PIN_EXISTS(AVR_MISO)
  REPORT_NAME_DIGITAL(__LINE__, AVR_MISO_PIN)
#endif
#if PIN_EXISTS(AVR_MOSI)
  REPORT_NAME_DIGITAL(__LINE__, AVR_MOSI_PIN)
#endif
#if PIN_EXISTS(AVR_SCK)
  REPORT_NAME_DIGITAL(__LINE__, AVR_SCK_PIN)
#endif
#if PIN_EXISTS(ALARM)
  REPORT_NAME_DIGITAL(__LINE__, ALARM_PIN)
#endif
#if PIN_EXISTS(AVR_SS)
  REPORT_NAME_DIGITAL(__LINE__, AVR_SS_PIN)
#endif
#if PIN_EXISTS(CASE_LIGHT)
  REPORT_NAME_DIGITAL(__LINE__, CASE_LIGHT_PIN)
#endif
#if _EXISTS(D57)
  REPORT_NAME_DIGITAL(__LINE__, D57)
#endif
#if _EXISTS(D58)
  REPORT_NAME_DIGITAL(__LINE__, D58)
#endif
#if PIN_EXISTS(DAC_DISABLE)
  REPORT_NAME_DIGITAL(__LINE__, DAC_DISABLE_PIN)
#endif
#if PIN_EXISTS(DAC0_SYNC)
  REPORT_NAME_DIGITAL(__LINE__, DAC0_SYNC_PIN)
#endif
#if PIN_EXISTS(DAC1_SYNC)
  REPORT_NAME_DIGITAL(__LINE__, DAC1_SYNC_PIN)
#endif
#if PIN_EXISTS(DEBUG)
  REPORT_NAME_DIGITAL(__LINE__, DEBUG_PIN)
#endif
#if _EXISTS(ENET_CRS)
  REPORT_NAME_DIGITAL(__LINE__, ENET_CRS)
#endif
#if _EXISTS(ENET_MDIO)
  REPORT_NAME_DIGITAL(__LINE__, ENET_MDIO)
#endif
#if _EXISTS(ENET_MOC)
  REPORT_NAME_DIGITAL(__LINE__, ENET_MOC)
#endif
#if _EXISTS(ENET_RX_ER)
  REPORT_NAME_DIGITAL(__LINE__, ENET_RX_ER)
#endif
#if _EXISTS(ENET_RXD0)
  REPORT_NAME_DIGITAL(__LINE__, ENET_RXD0)
#endif
#if _EXISTS(ENET_RXD1)
  REPORT_NAME_DIGITAL(__LINE__, ENET_RXD1)
#endif
#if _EXISTS(ENET_TX_EN)
  REPORT_NAME_DIGITAL(__LINE__, ENET_TX_EN)
#endif
#if _EXISTS(ENET_TXD0)
  REPORT_NAME_DIGITAL(__LINE__, ENET_TXD0)
#endif
#if _EXISTS(ENET_TXD1)
  REPORT_NAME_DIGITAL(__LINE__, ENET_TXD1)
#endif
#if PIN_EXISTS(EXP_VOLTAGE_LEVEL)
  REPORT_NAME_DIGITAL(__LINE__, EXP_VOLTAGE_LEVEL_PIN)
#endif
#if PIN_EXISTS(FIL_RUNOUT)
  REPORT_NAME_DIGITAL(__LINE__, FIL_RUNOUT_PIN)
#endif
#if PIN_EXISTS(FIL_RUNOUT2)
  REPORT_NAME_DIGITAL(__LINE__, FIL_RUNOUT2_PIN)
#endif
#if PIN_EXISTS(FIL_RUNOUT3)
  REPORT_NAME_DIGITAL(__LINE__, FIL_RUNOUT3_PIN)
#endif
#if PIN_EXISTS(FIL_RUNOUT4)
  REPORT_NAME_DIGITAL(__LINE__, FIL_RUNOUT4_PIN)
#endif
#if PIN_EXISTS(FIL_RUNOUT5)
  REPORT_NAME_DIGITAL(__LINE__, FIL_RUNOUT5_PIN)
#endif
#if PIN_EXISTS(FIL_RUNOUT6)
  REPORT_NAME_DIGITAL(__LINE__, FIL_RUNOUT6_PIN)
#endif
#if PIN_EXISTS(FIL_RUNOUT7)
  REPORT_NAME_DIGITAL(__LINE__, FIL_RUNOUT7_PIN)
#endif
#if PIN_EXISTS(FIL_RUNOUT8)
  REPORT_NAME_DIGITAL(__LINE__, FIL_RUNOUT8_PIN)
#endif
#if PIN_EXISTS(I2C_SCL)
  REPORT_NAME_DIGITAL(__LINE__, I2C_SCL_PIN)
#endif
#if PIN_EXISTS(I2C_SDA)
  REPORT_NAME_DIGITAL(__LINE__, I2C_SDA_PIN)
#endif
#if PIN_EXISTS(LED_GREEN)
  REPORT_NAME_DIGITAL(__LINE__, LED_GREEN_PIN)
#endif
#if PIN_EXISTS(LED)
  REPORT_NAME_DIGITAL(__LINE__, LED_PIN)
#endif
#if PIN_EXISTS(LED2)
  REPORT_NAME_DIGITAL(__LINE__, LED2_PIN)
#endif
#if PIN_EXISTS(LED3)
  REPORT_NAME_DIGITAL(__LINE__, LED3_PIN)
#endif
#if PIN_EXISTS(LED4)
  REPORT_NAME_DIGITAL(__LINE__, LED4_PIN)
#endif
#if PIN_EXISTS(LED_RED)
  REPORT_NAME_DIGITAL(__LINE__, LED_RED_PIN)
#endif
#if PIN_EXISTS(TEMP_0_CS)
  REPORT_NAME_DIGITAL(__LINE__, TEMP_0_CS_PIN)
#endif
#if PIN_EXISTS(TEMP_0_SCK)
  REPORT_NAME_DIGITAL(__LINE__, TEMP_0_SCK_PIN)
#endif
#if PIN_EXISTS(TEMP_0_MOSI)
  REPORT_NAME_DIGITAL(__LINE__, TEMP_0_MOSI_PIN)
#endif
#if PIN_EXISTS(TEMP_0_MISO)
  REPORT_NAME_DIGITAL(__LINE__, TEMP_0_MISO_PIN)
#endif
#if PIN_EXISTS(TEMP_1_CS)
  REPORT_NAME_DIGITAL(__LINE__, TEMP_1_CS_PIN)
#endif
#if PIN_EXISTS(TEMP_1_SCK)
  REPORT_NAME_DIGITAL(__LINE__, TEMP_1_SCK_PIN)
#endif
#if PIN_EXISTS(TEMP_1_MOSI)
  REPORT_NAME_DIGITAL(__LINE__, TEMP_1_MOSI_PIN)
#endif
#if PIN_EXISTS(TEMP_1_MISO)
  REPORT_NAME_DIGITAL(__LINE__, TEMP_1_MISO_PIN)
#endif

//#if _EXISTS(MISO)
//  REPORT_NAME_DIGITAL(__LINE__, MISO)
//#endif
#if PIN_EXISTS(MISO)
  REPORT_NAME_DIGITAL(__LINE__, SD_MISO_PIN)
#endif
//#if _EXISTS(MOSI)
//  REPORT_NAME_DIGITAL(__LINE__, MOSI)
//#endif
#if PIN_EXISTS(MOSI)
  REPORT_NAME_DIGITAL(__LINE__, SD_MOSI_PIN)
#endif
#if _EXISTS(REF_CLK)
  REPORT_NAME_DIGITAL(__LINE__, REF_CLK)
#endif
#if PIN_EXISTS(NEOPIXEL)
  REPORT_NAME_DIGITAL(__LINE__, NEOPIXEL_PIN)
#endif
#if PIN_EXISTS(NEOPIXEL2)
  REPORT_NAME_DIGITAL(__LINE__, NEOPIXEL2_PIN)
#endif
#if PIN_EXISTS(RGB_LED_R)
  REPORT_NAME_DIGITAL(__LINE__, RGB_LED_R_PIN)
#endif
#if PIN_EXISTS(RGB_LED_G)
  REPORT_NAME_DIGITAL(__LINE__, RGB_LED_G_PIN)
#endif
#if PIN_EXISTS(RGB_LED_B)
  REPORT_NAME_DIGITAL(__LINE__, RGB_LED_B_PIN)
#endif
#if PIN_EXISTS(RGB_LED_W)
  REPORT_NAME_DIGITAL(__LINE__, RGB_LED_W_PIN)
#endif
#if PIN_EXISTS(RX_ENABLE)
  REPORT_NAME_DIGITAL(__LINE__, RX_ENABLE_PIN)
#endif
//#if _EXISTS(SCK)
//  REPORT_NAME_DIGITAL(__LINE__, SCK)
//#endif
#if PIN_EXISTS(SCK)
  REPORT_NAME_DIGITAL(__LINE__, SD_SCK_PIN)
#endif
//#if _EXISTS(SCL)
//  REPORT_NAME_DIGITAL(__LINE__, SCL)
//#endif
//#if _EXISTS(SDA)
//  REPORT_NAME_DIGITAL(__LINE__, SDA)
//#endif
#if PIN_EXISTS(SLED)
  REPORT_NAME_DIGITAL(__LINE__, SLED_PIN)
#endif
#if PIN_EXISTS(SOL0)
  REPORT_NAME_DIGITAL(__LINE__, SOL0_PIN)
#endif
#if PIN_EXISTS(SOL1)
  REPORT_NAME_DIGITAL(__LINE__, SOL1_PIN)
#endif
#if PIN_EXISTS(SOL2)
  REPORT_NAME_DIGITAL(__LINE__, SOL2_PIN)
#endif
#if PIN_EXISTS(SOL3)
  REPORT_NAME_DIGITAL(__LINE__, SOL3_PIN)
#endif
#if PIN_EXISTS(SOL4)
  REPORT_NAME_DIGITAL(__LINE__, SOL4_PIN)
#endif
#if PIN_EXISTS(SOL5)
  REPORT_NAME_DIGITAL(__LINE__, SOL5_PIN)
#endif
#if PIN_EXISTS(SOL6)
  REPORT_NAME_DIGITAL(__LINE__, SOL6_PIN)
#endif
#if PIN_EXISTS(SOL7)
  REPORT_NAME_DIGITAL(__LINE__, SOL7_PIN)
#endif
#if _EXISTS(SPARE_IO)
  REPORT_NAME_DIGITAL(__LINE__, SPARE_IO)
#endif
#if PIN_EXISTS(SPI_EEPROM1_CS)
  REPORT_NAME_DIGITAL(__LINE__, SPI_EEPROM1_CS_PIN)
#endif
#if PIN_EXISTS(SPI_EEPROM2_CS)
  REPORT_NAME_DIGITAL(__LINE__, SPI_EEPROM2_CS_PIN)
#endif
#if PIN_EXISTS(SPI_FLASH_CS)
  REPORT_NAME_DIGITAL(__LINE__, SPI_FLASH_CS_PIN)
#endif
#if PIN_EXISTS(SR_CLK)
  REPORT_NAME_DIGITAL(__LINE__, SR_CLK_PIN)
#endif
#if PIN_EXISTS(SR_DATA)
  REPORT_NAME_DIGITAL(__LINE__, SR_DATA_PIN)
#endif
#if PIN_EXISTS(SR_STROBE)
  REPORT_NAME_DIGITAL(__LINE__, SR_STROBE_PIN)
#endif
#if PIN_EXISTS(SS)
  REPORT_NAME_DIGITAL(__LINE__, SD_SS_PIN)
#endif
#if PIN_EXISTS(STAT_LED_BLUE)
  REPORT_NAME_DIGITAL(__LINE__, STAT_LED_BLUE_PIN)
#endif
#if _EXISTS(STAT_LED_RED_LED)
  REPORT_NAME_DIGITAL(__LINE__, STAT_LED_RED_LED)
#endif
#if PIN_EXISTS(STAT_LED_RED)
  REPORT_NAME_DIGITAL(__LINE__, STAT_LED_RED_PIN)
#endif
#if PIN_EXISTS(TLC_BLANK)
  REPORT_NAME_DIGITAL(__LINE__, TLC_BLANK_PIN)
#endif
#if PIN_EXISTS(TLC_CLOCK)
  REPORT_NAME_DIGITAL(__LINE__, TLC_CLOCK_PIN)
#endif
#if PIN_EXISTS(TLC_DATA)
  REPORT_NAME_DIGITAL(__LINE__, TLC_DATA_PIN)
#endif
#if PIN_EXISTS(TLC_XLAT)
  REPORT_NAME_DIGITAL(__LINE__, TLC_XLAT_PIN)
#endif
#if PIN_EXISTS(TX_ENABLE)
  REPORT_NAME_DIGITAL(__LINE__, TX_ENABLE_PIN)
#endif
#if _EXISTS(UI1)
  REPORT_NAME_DIGITAL(__LINE__, UI1)
#endif
#if _EXISTS(UI2)
  REPORT_NAME_DIGITAL(__LINE__, UI2)
#endif
#if _EXISTS(UNUSED_PWM)
  REPORT_NAME_DIGITAL(__LINE__, UNUSED_PWM)
#endif
#if PIN_EXISTS(ESP_WIFI_MODULE_RESET)
  REPORT_NAME_DIGITAL(__LINE__, ESP_WIFI_MODULE_RESET_PIN)
#endif
#if PIN_EXISTS(ESP_WIFI_MODULE_ENABLE)
  REPORT_NAME_DIGITAL(__LINE__, ESP_WIFI_MODULE_ENABLE_PIN)
#endif
#if PIN_EXISTS(ESP_WIFI_MODULE_GPIO0)
  REPORT_NAME_DIGITAL(__LINE__, ESP_WIFI_MODULE_GPIO0_PIN)
#endif
#if PIN_EXISTS(ESP_WIFI_MODULE_GPIO2)
  REPORT_NAME_DIGITAL(__LINE__, ESP_WIFI_MODULE_GPIO2_PIN)
#endif